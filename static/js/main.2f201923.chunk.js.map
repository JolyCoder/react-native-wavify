{"version":3,"sources":["pause.js","app.js","index.js"],"names":["Pause","p","s","style","css","color","useState","faPause","button","setButton","icon","iconName","faPlay","handleClick","onClick","onKeyPress","e","key","eventCode","which","onMouseDown","title","charAt","toUpperCase","slice","aria-hidden","App","brown","alpha","splash","hover","isPaused","setPause","global","text","full","wave","pause","margin","center","styles","href","paused","fill","options","height","amplitude","speed","points","ReactDOM","render","document","getElementById"],"mappings":"qaAMA,IA4BeA,EA5BD,SAAAC,GACZ,IAAcC,EACRC,EAAQC,YAAH,IAEAH,EAAEI,OAJI,EAQWC,mBAASC,KARpB,mBAQVC,EARU,KAQFC,EARE,KAUXC,EAAO,iBAD8B,UAApBF,EAAOG,SACEC,IAASL,KACnCM,EAAc,WAClBJ,EAAUC,KACVT,EAAEa,WAQJ,OACE,sBAAQC,WAPW,SAACC,GACpB,IAAMC,EAAMD,EAAEE,WAAaF,EAAEG,MACf,KAEVF,GADU,KACOA,GAAeJ,KAGFO,YAAaP,EAAaT,IAAKD,GAC/D,YAAC,IAAD,CAAMO,KAAMF,EAAQa,OAtBVnB,EAsBuBM,EAAOG,SAtBzBT,EAAEoB,OAAO,GAAGC,cAAgBrB,EAAEsB,MAAM,IAsBAC,cAAY,Y,m+CCvBrE,IA2GeC,EA3GH,WACV,IAEMC,EAAQ,SAAAC,GAAK,mCAA0BA,EAA1B,MACbC,EAASF,EAAM,GACfG,EAAQH,EAAM,IALJ,EAMarB,oBAAS,GANtB,mBAMTyB,EANS,KAMCC,EAND,KASVC,EAAS7B,YAAH,IAWC0B,GAIPI,EAAO9B,YAAH,IAMCyB,GAILM,EAAO/B,YAAH,IAhCI,WA0CRgC,EAAOhC,YAAH,IA3CG,WAsDPiC,EAAQjC,YAAH,KAILkC,EAAM,0DAINC,EAASnC,YAAH,IAMNkC,EAMAA,GAMN,OACE,mBAAKlC,IAAK+B,GACR,YAAC,IAAD,CAAQK,OAAQP,IAChB,mBAAK7B,IAAKgC,GACR,mBAAKhC,IAAKmC,GACR,iBAAGE,KAAK,2CACN,iBAAGrC,IAAK8B,GAAR,kBAGJ,mBAAK9B,IAAKiC,GACR,YAAC,EAAD,CAAOhC,MAAOwB,EAAQf,QApFT,kBAAMkB,GAAUD,OAsF/B,YAAC,IAAD,CAAMW,OAAQX,EACRY,KA5FE,UA6FFC,QAAS,CACPC,OAAQ,GACRC,UAAW,GACXC,MAAO,GACPC,OAAQ,QCrGxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2f201923.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { useState } from 'react'\nimport { faPause, faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { jsx, css } from '@emotion/core'\n\nconst Pause = p => {\n  const upper = s => s.charAt(0).toUpperCase() + s.slice(1)\n  const style = css`\n    font-size: 75px;\n    color: ${p.color};\n    border: 0;\n    background-color: transparent;\n  `\n  const [button, setButton] = useState(faPause)\n  const isPaused = () => button.iconName === 'pause'\n  const icon = () => isPaused() ? faPlay : faPause\n  const handleClick = () => {\n    setButton(icon())\n    p.onClick()\n  }\n  const handleButton = (e) => {\n    const key = e.eventCode || e.which\n    const enter = 13\n    const space = 32\n    if (key === enter || key === space) handleClick()\n  }\n  return (\n    <button onKeyPress={handleButton} onMouseDown={handleClick} css={style}>\n      <Icon icon={button} title={upper(button.iconName)} aria-hidden=\"false\" />\n    </button>\n  )\n}\n\nexport default Pause\n","/** @jsx jsx */\nimport { jsx, css, Global } from '@emotion/core'\nimport Wave from 'react-wavify'\nimport Pause from './pause'\nimport { useState } from 'react'\n\nconst App = () => {\n  const sand = '#FADC96'\n  const water = '#5E9EF1'\n  const brown = alpha => `rgba(191, 136, 85, ${alpha})`\n  const splash = brown(1)\n  const hover = brown(0.9)\n  const [isPaused, setPause] = useState(false)\n  const togglePaused = () => setPause(!isPaused)\n\n  const global = css`\n    @import url('https://fonts.googleapis.com/css?family=Quicksand:400,700');\n    ::selection {\n      background: #FFF9CC;\n    }\n\n    a {\n      text-decoration: none;\n    }\n\n    p:hover, *:hover {\n      color: ${hover};\n    }\n  `\n\n  const text = css`\n    font-family: 'Quicksand', sans-serif;\n    font-weight: 700;\n    font-size: 5.5em;\n    margin-top: 0;\n    margin-bottom: 0;\n    color: ${splash};\n    word-wrap: none;\n  `\n\n  const full = css`\n    background: ${water};\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 1;\n  `\n\n  const wave = css`\n    background: ${sand};\n    width: 100%;\n    height: 400px;\n    position: absolute;\n    z-index: -1;\n    @media screen and (max-width: 550px) {\n      height: 300px;\n    }\n  `\n\n  const pause = css`\n    display: flex;\n    justify-content: center;\n  `\n  const margin = `\n    margin-top: 3.5em;\n    margin-bottom: 1.6em;\n  `\n  const center = css`\n    display: flex;\n    justify-content: center;\n    margin-top: 5.5em;\n    margin-bottom: 2.5em;\n    @media screen and (max-width: 550px) {\n      ${margin}\n      a {\n        font-size: 0.75em;\n      }\n    }\n    @media screen and (max-width: 405px) {\n      ${margin}\n      a {\n        font-size: 0.5em;\n      }\n    }\n  `\n  return (\n    <div css={full}>\n      <Global styles={global} />\n      <div css={wave}>\n        <div css={center}>\n          <a href=\"https://github.com/woofers/react-wavify\">\n            <p css={text}>react-wavify</p>\n          </a>\n        </div>\n        <div css={pause}>\n          <Pause color={splash} onClick={togglePaused} />\n        </div>\n        <Wave paused={isPaused}\n              fill={water}\n              options={{\n                height: 20,\n                amplitude: 20,\n                speed: 0.2,\n                points: 4\n              }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}